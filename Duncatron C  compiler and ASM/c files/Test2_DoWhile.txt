     void main()
    {
       int c=65,d=1;

       while(c<=90)
        {
       #pragma asm("mov A,%0",c)
       #pragma asm("mov U,A")
       c+=d;
       }

        if (c>90)
        {
        #pragma asm("mov U,0x40")
        }
        if (90<=c && d==1)
        {
        #pragma asm("mov U,0x40")
        }

        #pragma asm("mov U,0x0A")
        #pragma asm("mov U,0x0D")
        do{
        #pragma asm("mov U,0x41")
        d++;
        }
        while (d<25);
        #pragma asm("mov A,%0",d)
        #pragma asm("mov B,0x41")
        #pragma asm("add A,B")
        #pragma asm("mov U,A")
        #pragma asm("mov U,0x0A")
        #pragma asm("mov U,0x0D")
        
        d=1;
        do{
        #pragma asm("mov U,0x41")
        d++;
        }
        while (25>d);
        #pragma asm("mov A,%0",d)
        #pragma asm("mov B,0x41")
        #pragma asm("add A,B")
        #pragma asm("mov U,A")
        #pragma asm("mov U,0x0A")
        #pragma asm("mov U,0x0D")

        d=1;
        do{
        #pragma asm("mov U,0x41")
        }
        while (d++<25);
        #pragma asm("mov A,%0",d)
        #pragma asm("mov B,0x41")
        #pragma asm("add A,B")
        #pragma asm("mov U,A")
        #pragma asm("mov U,0x0A")
        #pragma asm("mov U,0x0D")

        d=1;
        do{
        #pragma asm("mov U,0x41")
        }
        while (25>d++);
        #pragma asm("mov A,%0",d)
        #pragma asm("mov B,0x41")
        #pragma asm("add A,B")
        #pragma asm("mov U,A")
        #pragma asm("mov U,0x0A")
        #pragma asm("mov U,0x0D")

        d=1;
        do{
        #pragma asm("mov U,0x41")
        }
        while (26-1>d++);
        #pragma asm("mov A,%0",d)
        #pragma asm("mov B,0x41")
        #pragma asm("add A,B")
        #pragma asm("mov U,A")
        #pragma asm("mov U,0x0A")
        #pragma asm("mov U,0x0D")

        d=1;
        do{
        #pragma asm("mov U,0x41")
        }
        while (d++<24+1);
        #pragma asm("mov A,%0",d)
        #pragma asm("mov B,0x41")
        #pragma asm("add A,B")
        #pragma asm("mov U,A")
        #pragma asm("mov U,0x0A")
        #pragma asm("mov U,0x0D")

        d=1;
        do{
        #pragma asm("mov U,0x41")
        }
        while ((1+d++)<26);
        #pragma asm("mov A,%0",d)
        #pragma asm("mov B,0x41")
        #pragma asm("add A,B")
        #pragma asm("mov U,A")
        #pragma asm("mov U,0x0A")
        #pragma asm("mov U,0x0D")

        d=1;
        do{
        #pragma asm("mov U,0x41")
        }
        while ((1+d++)<(14+12));
        #pragma asm("mov A,%0",d)
        #pragma asm("mov B,0x41")
        #pragma asm("add A,B")
        #pragma asm("mov U,A")
        #pragma asm("mov U,0x0A")
        #pragma asm("mov U,0x0D")
    }